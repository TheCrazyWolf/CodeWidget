@using CodeVijetWeb.Services
@using System.Timers
@using CodeVijetWeb.Models

@inject WatchDogService WatchDog;
@inject NavigationManager Navigation;

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">WidgetCode</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="/admin" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Админ панель
            </NavLink>
        </div>
        @foreach (var menu in _widgetMenus)
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" role='button' Match="NavLinkMatch.All" @onclick="() => OpenWidget(menu)">
                    <span class="oi oi-list-rich" aria-hidden="true"></span> @menu.ShortPath
                </NavLink>
            </div>
        }
    </nav>
</div>

@code {
   
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private Timer _timer = new()
    {
        Enabled = true,
    };

    private IEnumerable<WidgetMenu> _widgetMenus = new List<WidgetMenu>();

    protected override void OnInitialized()
    {
        _timer.Interval = WatchDog.GetTimeWaitFromConfig();
        _timer.Elapsed += async (object? sender, ElapsedEventArgs e) =>
        {
            _widgetMenus = WatchDog.GetWidgets();
            await InvokeAsync(StateHasChanged);
        };
    }

    private void ToggleNavMenu()
        => collapseNavMenu = !collapseNavMenu;

    private void OpenWidget(WidgetMenu widgetMenu)
        => Navigation.NavigateTo($"/widget?IdListing={widgetMenu.IdListingCode}");

}