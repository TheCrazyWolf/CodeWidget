@page "/admin"
@using CodeVijetWeb.DB;
@using CodeVijetWeb.Services

@inject IConfiguration Config;
@inject WatchDogService WatchDog;
@inject Sq_lite_Context Ef;

<h3>Админ панель</h3>
@if (_isAuthorized)
{
    <div>
        <div class="form-group">
            <label>Путь до папки с проектом для отслеживания</label>
            <input @bind="_newPath" type="text" class="form-control" placeholder="C:\Users\kulagin\RiderProjects\Api-Client-for-samgk.ru">
        </div>
        <button @onclick="ChangePathTracking" type="button" class="btn btn-primary">Сохранить</button>
    </div>

    <div>
        <h4>старые  проекты :</h4>
    </div>
    foreach (var item in GetHistoryApp())
    {
         <p>@item</p>
    }
    <button @onclick="ClearHistiry" class="btn btn-primary">очистить историю</button>
}
else
{
    <div>
        <div class="form-group">
            <label>Введите админ-пароль</label>
            <input @bind="_password" type="password" class="form-control" placeholder="Пароль">
        </div>
        <button @onclick="CheckPassword" type="button" class="btn btn-primary">Войти</button>
    </div>

  
}


@code {
    private bool _isAuthorized = false;

    private string _password = "";
    private string _newPath = "";

    /* Наитупейшая проверка, но пойдет */
    private void CheckPassword()
    {
        if(Config.GetValue<string>("Password") != _password)
            return;

        _isAuthorized = true;
        StateHasChanged();
    }

    /* Смена папки для отслеживания */
    private void ChangePathTracking()
    {
        if (!_isAuthorized) 
            return;
        
        WatchDog.ChangePathForTracking(_newPath);
        try // сохраним в  бд  
        {
            Ef.Logs.Add(new Logs { Date = DateOnly.FromDateTime(DateTime.Now), Path = _newPath });
            Ef.SaveChanges();
        }
        catch // да  пофиг 
        {}
    }


    /* старые  проекты */
    private List<string> GetHistoryApp()
    {
        return Ef.Logs.OrderByDescending(d => d.Date).Select(x => x.Path).Distinct().ToList();
    }


    /* старые  проекты */
    private void ClearHistiry()
    {

        try // получим из бд
        {
            Ef.Logs.RemoveRange(Ef.Logs);
            Ef.SaveChanges();
        }
        catch
        {
        }
    }
}