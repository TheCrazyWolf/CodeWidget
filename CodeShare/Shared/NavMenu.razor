@using System.Timers
@using CodeShare.Models
@using CodeShare.Services

@inject WatchDogService WatchDog;
@inject NavigationManager Navigation;


<MudPaper Style="background-color: #e3eaf2;" Width="300px" Elevation="0">
    <MudNavMenu Rounded="true" Margin="Margin.Dense" Class="pa-2">
        <MudNavLink Href="/index" Icon="@Icons.Material.Filled.Home">Главная</MudNavLink>
        <MudNavLink Href="/admin" Icon="@Icons.Material.Filled.Science">Админ панель</MudNavLink>
        @foreach (var menu in _widgetMenus)
        {
            <MudNavLink Href="@GetUrl(menu)" Match="NavLinkMatch.All"
                        Icon="@Icons.Material.Filled.Code">@menu.ShortPath
            </MudNavLink>
        }
    </MudNavMenu>
</MudPaper>


@code {

    private Timer _timer = new Timer
    {
        Enabled = true,
    };

    private IEnumerable<WidgetMenu> _widgetMenus = new List<WidgetMenu>();

    protected override void OnInitialized()
    {
        _timer.Interval = WatchDog.GetTimeWaitFromConfig();
        _timer.Elapsed += async (object? sender, ElapsedEventArgs e) =>
        {
            _widgetMenus = WatchDog.GetWidgets();
            await InvokeAsync(StateHasChanged);
        };
    }

    protected string GetUrl(WidgetMenu widgetMenu)
    {
        return $"/widget?id={widgetMenu.IdListingCode}";
    }
}